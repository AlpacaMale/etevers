apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
        - name: nginx
          image: nginx:latest
          ports:
            - containerPort: 80
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
        - name: flask
          image: my-flask-app:latest
          ports:
            - containerPort: 5000
          env:
            - name: GENAI_API_KEY
              value: -
            - name: GENAI_PROJECT_ID
              value: -
            - name: DB_PRIMARY_ROUTE
              value: -
            - name: DB_SECONDARY_ROUTE
              value: -
            - name: DB_USER
              value: -
            - name: DB_PASSWD
              value: -
            - name: RDS_ROUTE
              value: -
            - name: REDIS_ROUTE
              value: -
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: flask-secret
                  key: secret-key
      volumes:
        - name: nginx-config
          configMap:
            name: nginx-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nginx.conf: |
    events {
      worker_connections 1024;
    }
    http {
      server {
        listen 80;
        location / {
          proxy_pass http://127.0.0.1:5000;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
        }
      }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: flask-app-service
spec:
  selector:
    app: flask-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: LoadBalancer
